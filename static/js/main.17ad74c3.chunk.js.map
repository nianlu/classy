{"version":3,"sources":["container/Nav.js","container/useStateWithLocalStorage.js","container/SeatManagement.js","container/StudentManagement.js","container/TeachingAssistant.js","container/Body.js","container/App.js","serviceWorker.js","index.js"],"names":["Nav","props","console","log","act","react_default","a","createElement","className","role","aria-label","href","id","onClick","onAct","localStorage","clear","useStateWithLocalStorage","localStorageKey","defaultValue","arguments","length","undefined","_React$useState","React","useState","JSON","parse","getItem","_React$useState2","Object","slicedToArray","value","setValue","valueString","stringify","useEffect","setItem","SeatManagement","_useStateWithLocalSto","_useStateWithLocalSto2","search","setSearch","_useStateWithLocalSto3","_useStateWithLocalSto4","students","_useStateWithLocalSto5","Array","fill","hasTable","sit","_useStateWithLocalSto6","tables","setTables","onChangeTable","i","j","table","map","row","rownum","tab","colnum","assign","_React$useState3","_React$useState4","selected","setSelected","type","placeholder","onChange","e","target","aria-hidden","filter","s","name","toLowerCase","indexOf","key","availableTables","r","t","flat","forEach","idx","Math","floor","random","splice","find","StudentManagement","setStudents","newName","setNewName","onChangeStudent","index","student","concat","toConsumableArray","sid","gender","email","comment","TeachingAssistant","Body","container_SeatManagement","container_StudentManagement","container_TeachingAssistant","App","_useState","_useState2","active","setActive","container_Nav","container_Body","Boolean","window","location","hostname","match","ReactDOM","render","container_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.17ad74c3.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport './Nav.sass';\n\nfunction Nav(props) {\n  console.log('nav');\n  console.log(props);\n  console.log(props.act);\n  const reset = () => {\n    localStorage.clear();\n    // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n    // localStorage.setItem('students', JSON.stringify([]));\n    // localStorage.setItem('tables', JSON.stringify(Array(10).fill(Array(12).fill(false))));\n  }\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item subtitle\" href=\"./\">Classy</a>\n      </div>\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <a className={props.act === 1? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(1)}>\n            Layout Selection\n          </a>\n\n          <a className={props.act === 2? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(2)}>\n            Student Management\n          </a>\n    \n          <a className={props.act === 3? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(3)}>\n            Teaching Assistant\n          </a>\n    \n        </div>\n  \n        <div className=\"navbar-end\">\n          <div className=\"navbar-item has-dropdown is-hoverable\">\n            <a className=\"navbar-link\">\n              More\n            </a>\n    \n            <div className=\"navbar-dropdown\">\n              <a className=\"navbar-item\">\n                About\n              </a>\n              <a className=\"navbar-item\">\n                Contact\n              </a>\n              <hr className=\"navbar-divider\" />\n              <a className=\"navbar-item\">\n                Report an issue\n              </a>\n            </div>\n          </div>\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <a className=\"button is-light\" onClick={() => reset()} href='./'>\n                Reset\n              </a>\n              <a className=\"button is-light\">\n                Log in\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nexport const useStateWithLocalStorage = (localStorageKey, defaultValue='') => {\n  // console.log('key', localStorageKey);\n  // console.log('value', defaultValue);\n  // console.log(localStorage.getItem(localStorageKey));\n\n  const [value, setValue] = React.useState(\n    JSON.parse(localStorage.getItem(localStorageKey)) || defaultValue\n  );\n\n  // console.log('localvalue', value);\n\n  const valueString = JSON.stringify(value);\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, valueString);\n  }, [value]);\n\n  return [value, setValue];\n};","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction SeatManagement() {\n  // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n  // localStorage.setItem('students', JSON.stringify(['cc']));\n\n  const [value, setValue] = useStateWithLocalStorage('myValueInLocalStorage');\n  const onChange = event => setValue(event.target.value);\n\n  const [search, setSearch] = React.useState('');\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n\n  const [tables, setTables] = useStateWithLocalStorage('tables', Array(10).fill(Array(12).fill({hasTable: false, sit: null})));\n  const onChangeTable = (i, j, table) => \n    setTables(tables.map((row, rownum) => \n      (rownum === i)?\n        row.map((tab, colnum) => \n          (colnum === j)?\n            Object.assign({}, tab, table)\n            :\n            tab\n        )\n        :\n        row\n    ));\n  \n  const randomStudent = () => {\n    const availableTables = tables.map((r, i) => r.map((t, j) => \n      (t.hasTable && t.sit === null)?\n        {i: i, j: j}\n      :\n        null\n    )).flat().filter(t => t !== null)\n    console.log(availableTables)\n\n    students.forEach(s => {\n      // console.log(s)\n      const idx = Math.floor(Math.random() * Math.floor(availableTables.length))\n      // console.log(availableTables.length, idx)\n      // console.log(availableTables[idx].i, availableTables[idx].j, s.name)\n      tables[availableTables[idx].i][availableTables[idx].j].sit = s.name\n      // console.log('done')\n      availableTables.splice(idx, 1)\n    })\n    console.log(tables)\n    setTables(tables.map(r => r))\n  }\n\n  const [selected, setSelected] = React.useState(null);\n\n  // const tables = Array(10).fill(Array(12).fill());\n  // console.log('table', tables);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        {/* <input className=\"text\" value={value} onChange={onChange}></input> */}\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          <div className=\"panel-block\">\n            <p className=\"control has-icons-left\">\n              <input className=\"input is-small\" type=\"text\" placeholder=\"search\" value={search} onChange={e => setSearch(e.target.value)} />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n              </span>\n            </p>\n          </div>\n          {students.filter(s => s.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((s, i) => \n            <a className={selected === s.id? \"panel-block is-active c-used\" : \"panel-block\"} key={s.id} onClick={() => setSelected(selected === s.id? null : s.id)}>\n              {s.name}\n            </a>\n          )}\n        </nav>\n      </div>\n      <div className=\"column\">\n        <div className=\"buttons has-addons\">\n          <span className=\"button is-small\" onClick={randomStudent}>Random Students</span>\n          <span className=\"button is-small\" onClick={() => \n            setTables(tables.map(r => r.map(t => Object.assign({}, t, {sit: null}))))}\n          >Clear Students</span>\n          <span className=\"button is-small\" onClick={() => \n            setTables(tables.map(r => r.map(t => Object.assign({}, t, {hasTable: false, sit: null}))))}\n          >Clear Tables</span>\n        </div>\n        <table className=\"table is-bordered\">\n          <tbody>\n          {tables.map((r,i) =>\n            <tr key={'r'+i}>\n              {r.map((t,j) =>\n                // <td className=\"c-box\" key={'s'+i+''+j}>Seat R{i} C{j}</td>\n                <td className=\"c-td\" key={'s'+i+''+j}>\n                  {t.hasTable?\n                    (selected === null?\n                      <div className={t.sit? \"box c-box c-used\" : \"box c-box c-selected\"} \n                        onClick={() => onChangeTable(i, j, {hasTable: false, sit: null})}\n                      >\n                        {t.sit? t.sit : 'Table'}\n                      </div>\n                    :\n                      <div className={t.sit? \"box c-box c-used\" : \"box c-box c-selected\"} \n                        onClick={() => onChangeTable(i, j, {sit: students.find((s) => s.id === selected).name})}\n                      >\n                        {t.sit? t.sit : 'Table'}\n                      </div>\n                    )\n                  :\n                    <div className=\"box c-box\" onClick={() => onChangeTable(i, j, {hasTable: true})}></div>\n                  }\n                </td>\n              )}\n            </tr>\n          )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default SeatManagement;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction StudentManagement() {\n\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n  const [newName, setNewName] = React.useState('');\n\n  const [selected, setSelected] = React.useState(0);\n  const onChangeStudent = (index, student) => {\n    console.log('changing', index, student);\n    setStudents(\n      students.map((s) => \n        (s.id === index)?\n          Object.assign({}, s, student)\n          :\n          s\n      )\n    )\n  }\n\n  // console.log(students);\n  // console.log(selected);\n  // console.log(students[selected]);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          {students.map((s) => \n            <a className={selected === s.id? \"panel-block is-active c-selected\" : \"panel-block\"} key={s.id} onClick={() => setSelected(s.id)}>\n              {s.name}\n            </a>\n          )}\n          <div className=\"panel-block\">\n            <input className=\"input is-small\" type=\"text\" placeholder=\"name\" value={newName} onChange={e => setNewName(e.target.value)}></input>\n            <button className=\"button is-link is-outlined is-small\" onClick={() => {\n              setStudents([...students, {name: newName, id: students.length}]);\n              setNewName('');\n            }}>+</button>\n            {/* <button className=\"button is-link is-outlined is-fullwidth\" onClick={() => setStudents([...students, 'new'])}> add </button> */}\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"column is-6\">\n        {students.filter((s) => s.id === selected).map((s) =>\n          <div className=\"card\" key={'s'+s.id}>\n            <div className=\"card-header c-shadow\">\n              <p className=\"card-header-title\">Information</p>\n            </div>\n            <div className=\"card-content\">\n\n              <div className=\"field\">\n                <label className=\"label\">Name</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" value={s.name} onChange={e => onChangeStudent(s.id, {name: e.target.value})} />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Student ID</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" value={s.sid} onChange={e => onChangeStudent(s.id, {sid: e.target.value})} />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Gender</label>\n                <div className=\"control\">\n                  <div className=\"select\">\n                    <select value={s.gender} onChange={e => onChangeStudent(s.id, {gender: e.target.value})}>\n                      <option value=\"\"></option>\n                      <option value=\"male\">Male</option>\n                      <option value=\"female\">Female</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" value={s.email} onChange={e => onChangeStudent(s.id, {email: e.target.value})} />\n                </div>\n              </div>\n\n\n              <div className=\"field\">\n                <label className=\"label\">Comment</label>\n                <div className=\"control\">\n                  <textarea className=\"textarea\" placeholder=\"Textarea\" value={s.comment} onChange={e => onChangeStudent(s.id, {comment: e.target.value})} />\n                </div>\n              </div>\n\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StudentManagement;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction TeachingAssistant() {\n  // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n  // localStorage.setItem('students', JSON.stringify(['cc']));\n\n  const [search, setSearch] = React.useState('');\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n\n  const [tables, setTables] = useStateWithLocalStorage('tables', Array(10).fill(Array(12).fill({hasTable: false, sit: null})));\n  \n  const [selected, setSelected] = React.useState(null);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        {/* <input className=\"text\" value={value} onChange={onChange}></input> */}\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          <div className=\"panel-block\">\n            <p className=\"control has-icons-left\">\n              <input className=\"input is-small\" type=\"text\" placeholder=\"search\" value={search} onChange={e => setSearch(e.target.value)} />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n              </span>\n            </p>\n          </div>\n          {students.filter(s => s.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((s, i) => \n            <a className={selected === s.id? \"panel-block is-active c-used\" : \"panel-block\"} key={s.id} onClick={() => setSelected(selected === s.id? null : s.id)}>\n              {s.name}\n            </a>\n          )}\n        </nav>\n      </div>\n      <div className=\"column\">\n        <div className=\"buttons has-addons\">\n          <span className=\"button is-small\">Random Students</span>\n          <span className=\"button is-small\" \n          >Clear Students</span>\n          <span className=\"button is-small\" \n          >Clear Tables</span>\n        </div>\n        <table className=\"table is-bordered\">\n          <tbody>\n          {tables.map((r,i) =>\n            <tr key={'r'+i}>\n              {r.map((t,j) =>\n                <td className=\"c-td\" key={'s'+i+''+j}>\n                  {t.hasTable?\n                    (selected === null?\n                      <div className={t.sit? \"box c-box c-used\" : \"box c-box c-selected\"} \n                      >\n                        {t.sit? t.sit : 'Table'}\n                      </div>\n                    :\n                      <div className={t.sit? \"box c-box c-used\" : \"box c-box c-selected\"} \n                      >\n                        {t.sit? t.sit : 'Table'}\n                      </div>\n                    )\n                  :\n                    <div className=\"box c-box\"></div>\n                  }\n                </td>\n              )}\n            </tr>\n          )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default TeachingAssistant;","import React from 'react';\nimport './Body.sass';\n\nimport SeatManagement from './SeatManagement';\nimport StudentManagement from './StudentManagement';\nimport TeachingAssistant from './TeachingAssistant';\n\nfunction Body(props) {\n  console.log(props);\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        {props.act === 1 &&\n          <SeatManagement />\n        }\n        {props.act === 2 &&\n          <StudentManagement />\n        }\n        {props.act === 3 &&\n          <TeachingAssistant />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useState } from 'react';\nimport './App.sass';\n\nimport Nav from './Nav';\nimport Body from './Body';\n\nfunction App() {\n  const [active, setActive] = useState(1);\n  return (\n    <div>\n      <Nav act={active} onAct={setActive} />\n\n      <Body act={active}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}