{"version":3,"sources":["container/Nav.js","container/useStateWithLocalStorage.js","container/SeatManagement.js","container/StudentManagement.js","container/Body.js","container/App.js","serviceWorker.js","index.js"],"names":["Nav","props","console","log","act","react_default","a","createElement","className","role","aria-label","href","id","onClick","onAct","localStorage","clear","useStateWithLocalStorage","localStorageKey","defaultValue","arguments","length","undefined","_React$useState","React","useState","JSON","parse","getItem","_React$useState2","Object","slicedToArray","value","setValue","valueString","stringify","useEffect","setItem","SeatManagement","_useStateWithLocalSto","_useStateWithLocalSto2","search","setSearch","_useStateWithLocalSto3","_useStateWithLocalSto4","students","_useStateWithLocalSto5","Array","fill","hasTable","_useStateWithLocalSto6","tables","setTables","onChangeTable","i","j","table","map","row","rownum","tab","colnum","assign","_React$useState3","_React$useState4","selected","setSelected","type","placeholder","onChange","e","target","aria-hidden","filter","s","name","toLowerCase","indexOf","key","class","r","t","sit","find","StudentManagement","setStudents","newName","setNewName","onChangeStudent","index","student","concat","toConsumableArray","sid","gender","email","comment","Body","container_SeatManagement","container_StudentManagement","App","_useState","_useState2","active","setActive","container_Nav","container_Body","Boolean","window","location","hostname","match","ReactDOM","render","container_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"+QAyEeA,MArEf,SAAaC,GAWX,OAVAC,QAAQC,IAAI,OACZD,QAAQC,IAAIF,GACZC,QAAQC,IAAIF,EAAMG,KAShBC,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SAASC,KAAK,aAAaC,aAAW,mBACnDL,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACfH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,uBAAuBG,KAAK,MAAzC,WAEFN,EAAAC,EAAAC,cAAA,OAAKK,GAAG,qBAAqBJ,UAAU,eACrCH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAyB,IAAdP,EAAMG,IAAW,uBAAyB,cAAeS,QAAS,kBAAMZ,EAAMa,MAAM,KAAlG,oBAIAT,EAAAC,EAAAC,cAAA,KAAGC,UAAyB,IAAdP,EAAMG,IAAW,uBAAyB,cAAeS,QAAS,kBAAMZ,EAAMa,MAAM,KAAlG,sBAIAT,EAAAC,EAAAC,cAAA,KAAGC,UAAyB,IAAdP,EAAMG,IAAW,uBAAyB,cAAeS,QAAS,kBAAMZ,EAAMa,MAAM,KAAlG,sBAIAT,EAAAC,EAAAC,cAAA,OAAKC,UAAU,yCACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,QAIAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,mBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,SAGAH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,WAGAH,EAAAC,EAAAC,cAAA,MAAIC,UAAU,mBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,eAAb,sBAONH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,cACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,kBAAkBK,QAAS,WAjDlDE,aAAaC,SAiDoDL,KAAK,MAA5D,SAGAN,EAAAC,EAAAC,cAAA,KAAGC,UAAU,mBAAb,iBC3DDS,SAA2B,SAACC,GAAqC,IAApBC,EAAoBC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAP,GAAOG,EAKlDC,IAAMC,SAC9BC,KAAKC,MAAMZ,aAAaa,QAAQV,KAAqBC,GANqBU,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAKrES,EALqEH,EAAA,GAK9DI,EAL8DJ,EAAA,GAWtEK,EAAcR,KAAKS,UAAUH,GAMnC,OAJAR,IAAMY,UAAU,WACdrB,aAAasB,QAAQnB,EAAiBgB,IACrC,CAACF,IAEG,CAACA,EAAOC,KCuEFK,MArFf,WAA0B,IAAAC,EAIEtB,EAAyB,yBAJ3BuB,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAAAhB,GAAAiB,EAAA,GAAAA,EAAA,GAOIhB,IAAMC,SAAS,KAPnBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAOjBkB,EAPiBZ,EAAA,GAOTa,EAPSb,EAAA,GAAAc,EAQQ1B,EAAyB,WAAY,IAR7C2B,EAAAd,OAAAC,EAAA,EAAAD,CAAAa,EAAA,GAQjBE,EARiBD,EAAA,GAAAE,GAAAF,EAAA,GAUI3B,EAAyB,SAAU8B,MAAM,IAAIC,KAAKD,MAAM,IAAIC,KAAK,CAACC,UAAU,OAVhFC,EAAApB,OAAAC,EAAA,EAAAD,CAAAgB,EAAA,GAUjBK,EAViBD,EAAA,GAUTE,EAVSF,EAAA,GAWlBG,EAAgB,SAACC,EAAGC,EAAGC,GAAP,OACpBJ,EAAUD,EAAOM,IAAI,SAACC,EAAKC,GAAN,OAClBA,IAAWL,EACVI,EAAID,IAAI,SAACG,EAAKC,GAAN,OACLA,IAAWN,EACVzB,OAAOgC,OAAO,GAAIF,EAAKJ,GAEvBI,IAGJF,MArBkBK,EAwBQvC,IAAMC,SAAS,MAxBvBuC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAiC,EAAA,GAwBjBE,EAxBiBD,EAAA,GAwBPE,EAxBOF,EAAA,GA6BxB,OACE3D,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,YAGAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,0BACXH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAiB2D,KAAK,OAAOC,YAAY,SAASpC,MAAOS,EAAQ4B,SAAU,SAAAC,GAAC,OAAI5B,EAAU4B,EAAEC,OAAOvC,UACpH3B,EAAAC,EAAAC,cAAA,QAAMC,UAAU,yBACdH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,gBAAgBgE,cAAY,YAI9C3B,EAAS4B,OAAO,SAAAC,GAAC,OAAIA,EAAEC,KAAKC,cAAcC,QAAQpC,EAAOmC,gBAAkB,IAAGnB,IAAI,SAACiB,EAAGpB,GAAJ,OACjFjD,EAAAC,EAAAC,cAAA,KAAGC,UAAWyD,IAAaS,EAAE9D,GAAI,+BAAiC,cAAekE,IAAKJ,EAAE9D,GAAIC,QAAS,kBAAMqD,EAAYD,IAAaS,EAAE9D,GAAI,KAAO8D,EAAE9D,MAChJ8D,EAAEC,UAKXtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,OAAKwE,MAAM,sBACT1E,EAAAC,EAAAC,cAAA,QAAMwE,MAAM,mBAAZ,mBACA1E,EAAAC,EAAAC,cAAA,QAAMwE,MAAM,mBAAZ,mBACA1E,EAAAC,EAAAC,cAAA,QAAMwE,MAAM,mBAAZ,mBAEF1E,EAAAC,EAAAC,cAAA,SAAOC,UAAU,qBACfH,EAAAC,EAAAC,cAAA,aACC4C,EAAOM,IAAI,SAACuB,EAAE1B,GAAH,OACVjD,EAAAC,EAAAC,cAAA,MAAIuE,IAAK,IAAIxB,GACV0B,EAAEvB,IAAI,SAACwB,EAAE1B,GAAH,OAELlD,EAAAC,EAAAC,cAAA,MAAIC,UAAU,OAAOsE,IAAK,IAAIxB,EAAKC,GAChC0B,EAAEhC,SACa,OAAbgB,EACC5D,EAAAC,EAAAC,cAAA,OAAKC,UAAWyE,EAAEC,IAAK,mBAAqB,uBAAwBrE,QAAS,kBAAMwC,EAAcC,EAAGC,EAAG,CAACN,UAAU,EAAOiC,IAAK,SAASD,EAAEC,IAAKD,EAAEC,IAAM,SAEtJ7E,EAAAC,EAAAC,cAAA,OAAKC,UAAWyE,EAAEC,IAAK,mBAAqB,uBAAwBrE,QAAS,kBAAMwC,EAAcC,EAAGC,EAAG,CAAC2B,IAAKrC,EAASsC,KAAK,SAACT,GAAD,OAAOA,EAAE9D,KAAOqD,IAAUU,SAASM,EAAEC,IAAKD,EAAEC,IAAM,SAG/K7E,EAAAC,EAAAC,cAAA,OAAKC,UAAU,YAAYK,QAAS,kBAAMwC,EAAcC,EAAGC,EAAG,CAACN,UAAU,yBC+B9EmC,MAvGf,WAA6B,IAAA7C,EAEKtB,EAAyB,WAAY,IAF1CuB,EAAAV,OAAAC,EAAA,EAAAD,CAAAS,EAAA,GAEpBM,EAFoBL,EAAA,GAEV6C,EAFU7C,EAAA,GAAAjB,EAGGC,IAAMC,SAAS,IAHlBI,EAAAC,OAAAC,EAAA,EAAAD,CAAAP,EAAA,GAGpB+D,EAHoBzD,EAAA,GAGX0D,EAHW1D,EAAA,GAAAkC,EAKKvC,IAAMC,SAAS,GALpBuC,EAAAlC,OAAAC,EAAA,EAAAD,CAAAiC,EAAA,GAKpBE,EALoBD,EAAA,GAKVE,EALUF,EAAA,GAMrBwB,EAAkB,SAACC,EAAOC,GAC9BxF,QAAQC,IAAI,WAAYsF,EAAOC,GAC/BL,EACExC,EAASY,IAAI,SAACiB,GAAD,OACVA,EAAE9D,KAAO6E,EACR3D,OAAOgC,OAAO,GAAIY,EAAGgB,GAErBhB,MASR,OACErE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,iBAAb,YAGCqC,EAASY,IAAI,SAACiB,GAAD,OACZrE,EAAAC,EAAAC,cAAA,KAAGC,UAAWyD,IAAaS,EAAE9D,GAAI,mCAAqC,cAAekE,IAAKJ,EAAE9D,GAAIC,QAAS,kBAAMqD,EAAYQ,EAAE9D,MAC1H8D,EAAEC,QAGPtE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,iBAAiB2D,KAAK,OAAOC,YAAY,OAAOpC,MAAOsD,EAASjB,SAAU,SAAAC,GAAC,OAAIiB,EAAWjB,EAAEC,OAAOvC,UACpH3B,EAAAC,EAAAC,cAAA,UAAQC,UAAU,sCAAsCK,QAAS,WAC/DwE,EAAW,GAAAM,OAAA7D,OAAA8D,EAAA,EAAA9D,CAAKe,GAAL,CAAe,CAAC8B,KAAMW,EAAS1E,GAAIiC,EAASxB,WACvDkE,EAAW,MAFb,QASNlF,EAAAC,EAAAC,cAAA,OAAKC,UAAU,eACZqC,EAAS4B,OAAO,SAACC,GAAD,OAAOA,EAAE9D,KAAOqD,IAAUR,IAAI,SAACiB,GAAD,OAC7CrE,EAAAC,EAAAC,cAAA,OAAKC,UAAU,OAAOsE,IAAK,IAAIJ,EAAE9D,IAC/BP,EAAAC,EAAAC,cAAA,OAAKC,UAAU,wBACbH,EAAAC,EAAAC,cAAA,KAAGC,UAAU,qBAAb,gBAEFH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,gBAEbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,QACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQ2D,KAAK,OAAOnC,MAAO0C,EAAEC,KAAMN,SAAU,SAAAC,GAAC,OAAIkB,EAAgBd,EAAE9D,GAAI,CAAC+D,KAAML,EAAEC,OAAOvC,aAI7G3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,cACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQ2D,KAAK,OAAOnC,MAAO0C,EAAEmB,IAAKxB,SAAU,SAAAC,GAAC,OAAIkB,EAAgBd,EAAE9D,GAAI,CAACiF,IAAKvB,EAAEC,OAAOvC,aAI3G3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,UACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,UACbH,EAAAC,EAAAC,cAAA,UAAQyB,MAAO0C,EAAEoB,OAAQzB,SAAU,SAAAC,GAAC,OAAIkB,EAAgBd,EAAE9D,GAAI,CAACkF,OAAQxB,EAAEC,OAAOvC,UAC9E3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,KACd3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,QAAd,QACA3B,EAAAC,EAAAC,cAAA,UAAQyB,MAAM,UAAd,cAMR3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,SACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,QAAQ2D,KAAK,QAAQnC,MAAO0C,EAAEqB,MAAO1B,SAAU,SAAAC,GAAC,OAAIkB,EAAgBd,EAAE9D,GAAI,CAACmF,MAAOzB,EAAEC,OAAOvC,aAKhH3B,EAAAC,EAAAC,cAAA,OAAKC,UAAU,SACbH,EAAAC,EAAAC,cAAA,SAAOC,UAAU,SAAjB,WACAH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,WACbH,EAAAC,EAAAC,cAAA,YAAUC,UAAU,WAAW4D,YAAY,WAAWpC,MAAO0C,EAAEsB,QAAS3B,SAAU,SAAAC,GAAC,OAAIkB,EAAgBd,EAAE9D,GAAI,CAACoF,QAAS1B,EAAEC,OAAOvC,oBC1EnIiE,MAhBf,SAAchG,GAEZ,OADAC,QAAQC,IAAIF,GAEVI,EAAAC,EAAAC,cAAA,OAAKC,UAAU,QACbH,EAAAC,EAAAC,cAAA,OAAKC,UAAU,aACE,IAAdP,EAAMG,KACLC,EAAAC,EAAAC,cAAC2F,EAAD,MAEa,IAAdjG,EAAMG,KACLC,EAAAC,EAAAC,cAAC4F,EAAD,SCEKC,MAXf,WAAe,IAAAC,EACe5E,mBAAS,GADxB6E,EAAAxE,OAAAC,EAAA,EAAAD,CAAAuE,EAAA,GACNE,EADMD,EAAA,GACEE,EADFF,EAAA,GAEb,OACEjG,EAAAC,EAAAC,cAAA,WACEF,EAAAC,EAAAC,cAACkG,EAAD,CAAKrG,IAAKmG,EAAQzF,MAAO0F,IAEzBnG,EAAAC,EAAAC,cAACmG,EAAD,CAAMtG,IAAKmG,MCAGI,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO5G,EAAAC,EAAAC,cAAC2G,EAAD,MAASC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.1dc3d4fa.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport './Nav.sass';\n\nfunction Nav(props) {\n  console.log('nav');\n  console.log(props);\n  console.log(props.act);\n  const reset = () => {\n    localStorage.clear();\n    // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n    // localStorage.setItem('students', JSON.stringify([]));\n    // localStorage.setItem('tables', JSON.stringify(Array(10).fill(Array(12).fill(false))));\n  }\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item subtitle\" href=\"./\">Classy</a>\n      </div>\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <a className={props.act === 1? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(1)}>\n            Layout Selection\n          </a>\n\n          <a className={props.act === 2? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(2)}>\n            Student Management\n          </a>\n    \n          <a className={props.act === 3? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(3)}>\n            Teaching Assistant\n          </a>\n    \n          <div className=\"navbar-item has-dropdown is-hoverable\">\n            <a className=\"navbar-link\">\n              More\n            </a>\n    \n            <div className=\"navbar-dropdown\">\n              <a className=\"navbar-item\">\n                About\n              </a>\n              <a className=\"navbar-item\">\n                Contact\n              </a>\n              <hr className=\"navbar-divider\" />\n              <a className=\"navbar-item\">\n                Report an issue\n              </a>\n            </div>\n          </div>\n        </div>\n  \n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <a className=\"button is-light\" onClick={() => reset()} href='./'>\n                Reset\n              </a>\n              <a className=\"button is-light\">\n                Log in\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nexport const useStateWithLocalStorage = (localStorageKey, defaultValue='') => {\n  // console.log('key', localStorageKey);\n  // console.log('value', defaultValue);\n  // console.log(localStorage.getItem(localStorageKey));\n\n  const [value, setValue] = React.useState(\n    JSON.parse(localStorage.getItem(localStorageKey)) || defaultValue\n  );\n\n  // console.log('localvalue', value);\n\n  const valueString = JSON.stringify(value);\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, valueString);\n  }, [value]);\n\n  return [value, setValue];\n};","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction SeatManagement() {\n  // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n  // localStorage.setItem('students', JSON.stringify(['cc']));\n\n  const [value, setValue] = useStateWithLocalStorage('myValueInLocalStorage');\n  const onChange = event => setValue(event.target.value);\n\n  const [search, setSearch] = React.useState('');\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n\n  const [tables, setTables] = useStateWithLocalStorage('tables', Array(10).fill(Array(12).fill({hasTable: false})));\n  const onChangeTable = (i, j, table) => \n    setTables(tables.map((row, rownum) => \n      (rownum === i)?\n        row.map((tab, colnum) => \n          (colnum === j)?\n            Object.assign({}, tab, table)\n            :\n            tab\n        )\n        :\n        row\n    ));\n\n  const [selected, setSelected] = React.useState(null);\n\n  // const tables = Array(10).fill(Array(12).fill());\n  // console.log('table', tables);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        {/* <input className=\"text\" value={value} onChange={onChange}></input> */}\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          <div className=\"panel-block\">\n            <p className=\"control has-icons-left\">\n              <input className=\"input is-small\" type=\"text\" placeholder=\"search\" value={search} onChange={e => setSearch(e.target.value)} />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n              </span>\n            </p>\n          </div>\n          {students.filter(s => s.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((s, i) => \n            <a className={selected === s.id? \"panel-block is-active c-used\" : \"panel-block\"} key={s.id} onClick={() => setSelected(selected === s.id? null : s.id)}>\n              {s.name}\n            </a>\n          )}\n        </nav>\n      </div>\n      <div className=\"column\">\n        <div class=\"buttons has-addons\">\n          <span class=\"button is-small\">Assign Students</span>\n          <span class=\"button is-small\">Random Students</span>\n          <span class=\"button is-small\">Clear Students</span>\n        </div>\n        <table className=\"table is-bordered\">\n          <tbody>\n          {tables.map((r,i) =>\n            <tr key={'r'+i}>\n              {r.map((t,j) =>\n                // <td className=\"c-box\" key={'s'+i+''+j}>Seat R{i} C{j}</td>\n                <td className=\"c-td\" key={'s'+i+''+j}>\n                  {t.hasTable?\n                    (selected === null?\n                      <div className={t.sit? \"box c-box c-used\" : \"box c-box c-selected\"} onClick={() => onChangeTable(i, j, {hasTable: false, sit: null})}>{t.sit? t.sit : 'Table'}</div>\n                    :\n                      <div className={t.sit? \"box c-box c-used\" : \"box c-box c-selected\"} onClick={() => onChangeTable(i, j, {sit: students.find((s) => s.id === selected).name})}>{t.sit? t.sit : 'Table'}</div>\n                    )\n                  :\n                    <div className=\"box c-box\" onClick={() => onChangeTable(i, j, {hasTable: true})}></div>\n                  }\n                </td>\n              )}\n            </tr>\n          )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default SeatManagement;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction StudentManagement() {\n\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n  const [newName, setNewName] = React.useState('');\n\n  const [selected, setSelected] = React.useState(0);\n  const onChangeStudent = (index, student) => {\n    console.log('changing', index, student);\n    setStudents(\n      students.map((s) => \n        (s.id === index)?\n          Object.assign({}, s, student)\n          :\n          s\n      )\n    )\n  }\n\n  // console.log(students);\n  // console.log(selected);\n  // console.log(students[selected]);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          {students.map((s) => \n            <a className={selected === s.id? \"panel-block is-active c-selected\" : \"panel-block\"} key={s.id} onClick={() => setSelected(s.id)}>\n              {s.name}\n            </a>\n          )}\n          <div className=\"panel-block\">\n            <input className=\"input is-small\" type=\"text\" placeholder=\"name\" value={newName} onChange={e => setNewName(e.target.value)}></input>\n            <button className=\"button is-link is-outlined is-small\" onClick={() => {\n              setStudents([...students, {name: newName, id: students.length}]);\n              setNewName('');\n            }}>+</button>\n            {/* <button className=\"button is-link is-outlined is-fullwidth\" onClick={() => setStudents([...students, 'new'])}> add </button> */}\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"column is-6\">\n        {students.filter((s) => s.id === selected).map((s) =>\n          <div className=\"card\" key={'s'+s.id}>\n            <div className=\"card-header c-shadow\">\n              <p className=\"card-header-title\">Information</p>\n            </div>\n            <div className=\"card-content\">\n\n              <div className=\"field\">\n                <label className=\"label\">Name</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" value={s.name} onChange={e => onChangeStudent(s.id, {name: e.target.value})} />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Student ID</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"text\" value={s.sid} onChange={e => onChangeStudent(s.id, {sid: e.target.value})} />\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Gender</label>\n                <div className=\"control\">\n                  <div className=\"select\">\n                    <select value={s.gender} onChange={e => onChangeStudent(s.id, {gender: e.target.value})}>\n                      <option value=\"\"></option>\n                      <option value=\"male\">Male</option>\n                      <option value=\"female\">Female</option>\n                    </select>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"field\">\n                <label className=\"label\">Email</label>\n                <div className=\"control\">\n                  <input className=\"input\" type=\"email\" value={s.email} onChange={e => onChangeStudent(s.id, {email: e.target.value})} />\n                </div>\n              </div>\n\n\n              <div className=\"field\">\n                <label className=\"label\">Comment</label>\n                <div className=\"control\">\n                  <textarea className=\"textarea\" placeholder=\"Textarea\" value={s.comment} onChange={e => onChangeStudent(s.id, {comment: e.target.value})} />\n                </div>\n              </div>\n\n            </div>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StudentManagement;\n","import React from 'react';\nimport './Body.sass';\n\nimport SeatManagement from './SeatManagement';\nimport StudentManagement from './StudentManagement';\n\nfunction Body(props) {\n  console.log(props);\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        {props.act === 1 &&\n          <SeatManagement />\n        }\n        {props.act === 2 &&\n          <StudentManagement />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useState } from 'react';\nimport './App.sass';\n\nimport Nav from './Nav';\nimport Body from './Body';\n\nfunction App() {\n  const [active, setActive] = useState(1);\n  return (\n    <div>\n      <Nav act={active} onAct={setActive} />\n\n      <Body act={active}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}