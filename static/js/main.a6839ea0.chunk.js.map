{"version":3,"sources":["container/Nav.js","container/useStateWithLocalStorage.js","container/SeatManagement.js","container/StudentManagement.js","container/Body.js","container/App.js","serviceWorker.js","index.js"],"names":["Nav","props","console","log","act","react_default","a","createElement","className","role","aria-label","href","id","onClick","onAct","localStorage","clear","useStateWithLocalStorage","localStorageKey","defaultValue","arguments","length","undefined","_React$useState","React","useState","JSON","parse","getItem","_React$useState2","Object","slicedToArray","value","setValue","valueString","stringify","useEffect","setItem","SeatManagement","_useStateWithLocalSto","_useStateWithLocalSto2","search","setSearch","_useStateWithLocalSto3","_useStateWithLocalSto4","students","_useStateWithLocalSto5","Array","fill","_useStateWithLocalSto6","tables","setTables","onChangeTable","i","j","map","row","rownum","col","colnum","type","placeholder","onChange","e","target","aria-hidden","filter","s","name","toLowerCase","indexOf","key","r","t","StudentManagement","setStudents","newName","setNewName","_React$useState3","_React$useState4","selected","setSelected","concat","toConsumableArray","_","index","student","assign","Body","container_SeatManagement","container_StudentManagement","App","_useState","_useState2","active","setActive","container_Nav","container_Body","Boolean","window","location","hostname","match","ReactDOM","render","container_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.a6839ea0.chunk.js","sourcesContent":["/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React, { useState } from 'react';\nimport './Nav.sass';\n\nfunction Nav(props) {\n  console.log('nav');\n  console.log(props);\n  console.log(props.act);\n  const reset = () => {\n    localStorage.clear();\n    // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n    // localStorage.setItem('students', JSON.stringify([]));\n    // localStorage.setItem('tables', JSON.stringify(Array(10).fill(Array(12).fill(false))));\n  }\n\n  return (\n    <nav className=\"navbar\" role=\"navigation\" aria-label=\"main navigation\">\n      <div className=\"container\">\n      <div className=\"navbar-brand\">\n        <a className=\"navbar-item subtitle\" href=\"./\">Classy</a>\n      </div>\n      <div id=\"navbarBasicExample\" className=\"navbar-menu\">\n        <div className=\"navbar-start\">\n          <a className={props.act === 1? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(1)}>\n            Layout Selection\n          </a>\n\n          <a className={props.act === 2? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(2)}>\n            Student Management\n          </a>\n    \n          <a className={props.act === 3? \"navbar-item c-active\" : \"navbar-item\"} onClick={() => props.onAct(3)}>\n            Teaching Assistant\n          </a>\n    \n          <div className=\"navbar-item has-dropdown is-hoverable\">\n            <a className=\"navbar-link\">\n              More\n            </a>\n    \n            <div className=\"navbar-dropdown\">\n              <a className=\"navbar-item\">\n                About\n              </a>\n              <a className=\"navbar-item\">\n                Contact\n              </a>\n              <hr className=\"navbar-divider\" />\n              <a className=\"navbar-item\">\n                Report an issue\n              </a>\n            </div>\n          </div>\n        </div>\n  \n        <div className=\"navbar-end\">\n          <div className=\"navbar-item\">\n            <div className=\"buttons\">\n              <a className=\"button is-light\" onClick={() => reset()} href='/'>\n                Reset\n              </a>\n              <a className=\"button is-light\">\n                Log in\n              </a>\n            </div>\n          </div>\n        </div>\n      </div>\n      </div>\n    </nav>\n  );\n}\n\nexport default Nav;\n","import React from 'react';\n\nexport const useStateWithLocalStorage = (localStorageKey, defaultValue='') => {\n  // console.log('key', localStorageKey);\n  // console.log('value', defaultValue);\n  // console.log(localStorage.getItem(localStorageKey));\n\n  const [value, setValue] = React.useState(\n    JSON.parse(localStorage.getItem(localStorageKey)) || defaultValue\n  );\n\n  // console.log('localvalue', value);\n\n  const valueString = JSON.stringify(value);\n\n  React.useEffect(() => {\n    localStorage.setItem(localStorageKey, valueString);\n  }, [value]);\n\n  return [value, setValue];\n};","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction SeatManagement() {\n  // localStorage.setItem('myValueInLocalStorage', JSON.stringify('test'));\n  // localStorage.setItem('students', JSON.stringify(['cc']));\n\n  const [value, setValue] = useStateWithLocalStorage('myValueInLocalStorage');\n  const onChange = event => setValue(event.target.value);\n\n  const [search, setSearch] = React.useState('');\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n\n  const [tables, setTables] = useStateWithLocalStorage('tables', Array(10).fill(Array(12).fill()));\n  const onChangeTable = (i, j, value) => \n    setTables(tables.map((row, rownum) => \n      (rownum === i)?\n        row.map((col, colnum) => \n          (colnum === j)?\n            value\n            :\n            col\n        )\n        :\n        row\n    ));\n\n  // const tables = Array(10).fill(Array(12).fill());\n\n  // console.log('table', tables);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        {/* <input className=\"text\" value={value} onChange={onChange}></input> */}\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          <div className=\"panel-block\">\n            <p className=\"control has-icons-left\">\n              <input className=\"input is-small\" type=\"text\" placeholder=\"search\" value={search} onChange={e => setSearch(e.target.value)} />\n              <span className=\"icon is-small is-left\">\n                <i className=\"fas fa-search\" aria-hidden=\"true\"></i>\n              </span>\n            </p>\n          </div>\n          {students.filter(s => s.name.toLowerCase().indexOf(search.toLowerCase()) > -1).map((s, i) => \n            <a className=\"panel-block\" key={i}>\n              {s.name}\n            </a>\n          )}\n        </nav>\n      </div>\n      <div className=\"column\">\n        <table className=\"table is-bordered\">\n          <tbody>\n          {tables.map((r,i) =>\n            <tr key={'r'+i}>\n              {r.map((t,j) =>\n                // <td className=\"c-box\" key={'s'+i+''+j}>Seat R{i} C{j}</td>\n                <td className=\"c-td\" key={'s'+i+''+j}>\n                  {t?\n                    <div className=\"box c-box c-selected\" onClick={() => onChangeTable(i, j, false)}>Selected</div>\n                  :\n                    <div className=\"box c-box\" onClick={() => onChangeTable(i, j, true)}>Empty</div>\n                  }\n                </td>\n              )}\n            </tr>\n          )}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n\nexport default SeatManagement;\n","/* eslint-disable jsx-a11y/anchor-is-valid */\nimport React from 'react';\n\nimport { useStateWithLocalStorage } from './useStateWithLocalStorage';\n\nfunction StudentManagement() {\n\n  const [students, setStudents] = useStateWithLocalStorage('students', []);\n  const [newName, setNewName] = React.useState('');\n\n  const [selected, setSelected] = React.useState(0);\n  const onChangeStudent = (index, student) => {\n    console.log('changing', index, student);\n    setSelected(\n      students.map((s, i) => \n        (i === index)?\n          Object.assign({}, s, student)\n          :\n          s\n      )\n    )\n  }\n\n  console.log(students);\n  console.log(students[selected]);\n\n  return (\n    <div className=\"columns\">\n      <div className=\"column is-2\">\n        <nav className=\"panel\">\n          <p className=\"panel-heading\">\n            Students\n          </p>\n          {students.map((s, i) => \n            <a className={selected === i? \"panel-block is-active c-selected\" : \"panel-block\"} key={i} onClick={() => setSelected(i)}>\n              {s.name}\n            </a>\n          )}\n          <div className=\"panel-block\">\n            <input className=\"input is-small\" type=\"text\" placeholder=\"name\" value={newName} onChange={e => setNewName(e.target.value)}></input>\n            <button className=\"button is-link is-outlined is-small\" onClick={() => {\n              setStudents([...students, {name: newName}]);\n              setNewName('');\n            }}>+</button>\n            {/* <button className=\"button is-link is-outlined is-fullwidth\" onClick={() => setStudents([...students, 'new'])}> add </button> */}\n          </div>\n        </nav>\n      </div>\n\n      <div className=\"column\">\n        {students.filter((_,i) => i === selected).map((s, i) =>\n        <div>\n        <div className=\"field\">\n          <label className=\"label\">Name</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" value={s.name} onChange={e => onChangeStudent(i, {name: e.target.value})} />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">ID</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Text input\" />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Gender</label>\n          <div className=\"control\">\n            <input className=\"input\" type=\"text\" placeholder=\"Text input\" />\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Username</label>\n          <div className=\"control has-icons-left has-icons-right\">\n            <input className=\"input is-success\" type=\"text\" placeholder=\"Text input\" value=\"bulma\" />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-user\"></i>\n            </span>\n            <span className=\"icon is-small is-right\">\n              <i className=\"fas fa-check\"></i>\n            </span>\n          </div>\n          <p className=\"help is-success\">This username is available</p>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Email</label>\n          <div className=\"control has-icons-left has-icons-right\">\n            <input className=\"input is-danger\" type=\"email\" placeholder=\"Email input\" value=\"hello@\" />\n            <span className=\"icon is-small is-left\">\n              <i className=\"fas fa-envelope\"></i>\n            </span>\n            <span className=\"icon is-small is-right\">\n              <i className=\"fas fa-exclamation-triangle\"></i>\n            </span>\n          </div>\n          <p className=\"help is-danger\">This email is invalid</p>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Subject</label>\n          <div className=\"control\">\n            <div className=\"select\">\n              <select>\n                <option>Select dropdown</option>\n                <option>With options</option>\n              </select>\n            </div>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <label className=\"label\">Message</label>\n          <div className=\"control\">\n            <textarea className=\"textarea\" placeholder=\"Textarea\"></textarea>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"control\">\n            <label className=\"checkbox\">\n              <input type=\"checkbox\" />\n              I agree to the <a href=\"#\">terms and conditions</a>\n            </label>\n          </div>\n        </div>\n\n        <div className=\"field\">\n          <div className=\"control\">\n            <label className=\"radio\">\n              <input type=\"radio\" name=\"question\" />\n              Yes\n            </label>\n            <label className=\"radio\">\n              <input type=\"radio\" name=\"question\" />\n              No\n            </label>\n          </div>\n        </div>\n\n        <div className=\"field is-grouped\">\n          <div className=\"control\">\n            <button className=\"button is-link\">Submit</button>\n          </div>\n          <div className=\"control\">\n            <button className=\"button is-text\">Cancel</button>\n          </div>\n        </div>\n\n        </div>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default StudentManagement;\n","import React from 'react';\nimport './Body.sass';\n\nimport SeatManagement from './SeatManagement';\nimport StudentManagement from './StudentManagement';\n\nfunction Body(props) {\n  console.log(props);\n  return (\n    <div className=\"body\">\n      <div className=\"container\">\n        {props.act === 1 &&\n          <SeatManagement />\n        }\n        {props.act === 2 &&\n          <StudentManagement />\n        }\n      </div>\n    </div>\n  );\n}\n\nexport default Body;\n","import React, { useState } from 'react';\nimport './App.sass';\n\nimport Nav from './Nav';\nimport Body from './Body';\n\nfunction App() {\n  const [active, setActive] = useState(1);\n  return (\n    <div>\n      <Nav act={active} onAct={setActive} />\n\n      <Body act={active}/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.sass';\nimport App from './container/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}